<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elementary</name>
    </assembly>
    <members>
        <member name="T:Elementary.Using">
            <summary>
                <para>A target class will be used as element instance.</para>
                <para>The element context can create instances only with this attribuute.</para>
            </summary>
        </member>
        <member name="T:Elementary.Element">
            <summary>
                <para>Base implementation of <see cref="T:Elementary.IElement"/> in the context.</para>
            </summary>
        </member>
        <member name="T:Elementary.ElementContext">
            <summary>
            <para>Main class</para>
            </summary>
        </member>
        <member name="P:Elementary.ElementContext.TableBuilder">
            <summary>
                 <para>Builds the two next tables.</para>
            </summary>
        </member>
        <member name="P:Elementary.ElementContext.ParentTable">
            <summary>
                <para>Keeps type vs parent types.</para>
            </summary>
        </member>
        <member name="P:Elementary.ElementContext.ChildTable">
            <summary>
                <para>Keeps type vs child types.</para>
            </summary>
        </member>
        <member name="T:Elementary.ElementLayer`1">
            <summary>
                <para>A group of "T" elements.</para>
            </summary>
            <typeparam name="T">Interface type.</typeparam>
        </member>
        <member name="T:Elementary.IElement">
            <summary>
                <para>Base interface in the element context.</para>
            </summary>
        </member>
        <member name="M:Elementary.IElement.OnCreate(Elementary.IElementContext)">
            <summary>
                <para>Called after constructor.
                Use this method to create child elements.</para>
            </summary>
            <param name="context">Element system. Responsibles for all elements.</param>
        </member>
        <member name="M:Elementary.IElement.OnPrepare">
            <summary>
                <para>Called after all elements are created.
                Use this method to bind elements each other.</para>
            </summary>
        </member>
        <member name="M:Elementary.IElement.OnReady">
            <summary>
                <para>Called after all elements are bound.
                Use this method to subscribe on other elements.</para>
            </summary>
        </member>
        <member name="M:Elementary.IElement.OnStart">
            <summary>
                <para>Called after all elements are ready.
                Use this method to setup initial state.</para>
            </summary>
        </member>
        <member name="M:Elementary.IElement.OnFinish">
            <summary>
                <para>Called when context is terminating.
                Use this method to unsubscribe from other elements.</para>
            </summary>
        </member>
        <member name="M:Elementary.IElement.OnDispose">
            <summary>
                <para>Called before destroying context.
                Use this method to dispose resources.</para>
            </summary>
        </member>
        <member name="T:Elementary.IElementContext">
            <summary>
                <para>Element system. Responsibles for all elements.</para>
            </summary>
        </member>
        <member name="M:Elementary.IElementContext.Initialize">
            <summary>
                <para>Initializes system. Use this method before work.</para>
            </summary>
        </member>
        <member name="M:Elementary.IElementContext.Terminate">
            <summary>
                <para>Finalizes system. Dispose resources in context.</para>
            </summary>
        </member>
        <member name="M:Elementary.IElementContext.CreateElement``1(System.Type)">
            <summary>
                <para>Creates a new element like a default constructor.</para>
            </summary>
            <param name="targetType">Implementation type.</param>
            <typeparam name="T">Interface type</typeparam>
            <returns>New instance.</returns>
        </member>
        <member name="M:Elementary.IElementContext.CreateElements``1">
            <summary>
                <para>Creates a new element group.</para>
            </summary>
            <typeparam name="T">Interface type.</typeparam>
            <returns>A group of new elements inherited from "T"</returns>
        </member>
        <member name="M:Elementary.IElementContext.GetRootElement``1">
            <summary>
                <para>Returns a root element in hierarchy.</para>
            </summary>
            <typeparam name="T">Root type</typeparam>
            <returns>Reference.</returns>
        </member>
        <member name="M:Elementary.IElementContext.GetRootElements``1">
            <summary>
                <para>Returns a group of required root elements.</para>
            </summary>
            <typeparam name="T">Interface type.</typeparam>
            <returns>A group of root elements.</returns>
        </member>
        <member name="T:Elementary.IRootElement">
            <summary>
                <para>A root element in the system. It is created automatically.</para>
            </summary>
        </member>
        <member name="P:Elementary.ElementTableBuilder.RequiredAssemblies">
            <summary>
                <para>Finds element types only in selected assemblies.</para>
            </summary>
        </member>
        <member name="T:Elementary.ElementTables">
            <summary>
                <para>Keeps two tables with type hierarchy: child and parent.</para>
            </summary>
        </member>
        <member name="T:Elementary.IElementTableBuilder">
            <summary>
                <para>Builds two hierarchy type tables: child and parent. </para>
            </summary>
        </member>
    </members>
</doc>
